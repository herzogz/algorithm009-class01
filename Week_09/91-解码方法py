#!/usr/bin/env python3
# -*- encoding:utf-8 -*-
class Solution:
    def numDecodings(self, s: str) -> int:
        if s[0] == '0' or not s:  # 不能解码的情况
            return 0

        pre, cur = 1, 1
        for i in range(1, len(s)):
            # 当前的方法 = 上上次的方法可以跨两步 + 上次的方法可以跨一步
            pre, cur = cur, pre * (9 < int(s[i - 1:i + 1]) <= 26) + cur * (
                        int(s[i]) > 0)
        return cur

# 子问题 求字符串包含的子集（1-26），
# 状态定义 dp[i]
#    1 <= dp[i] <= 9, +1  一个数字
#    10<=  dp[i-1 : i+1] <= 26, +1 两个数字
#    dp[i] = dp[i-1] + dp[i]
